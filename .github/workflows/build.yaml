name: flytekit-java build

on:
  push:
    branches:  [master]
  pull_request:
    branches:
      - master

jobs:
  build-snapshot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-prepare-release-${{ hashFiles('pom.xml') }}

      - name: Log in to Docker Hub
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.FLYTE_BOT_USERNAME }}
          password: ${{ secrets.FLYTE_BOT_PAT }}

      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11.0
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.SONATYPE_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: rc-list
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SONATYPE_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ## Release repository
          ## Have to find the stagingRepositoryId that was auto-generated
          mvn -B org.sonatype.plugins:nexus-staging-maven-plugin:1.6.8:rc-list -DnexusUrl=https://oss.sonatype.org/ -DserverId=ossrh -P release

      - name: Print
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SONATYPE_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ## Release repository
          ## Have to find the stagingRepositoryId that was auto-generated
          rcList=$(mvn -B org.sonatype.plugins:nexus-staging-maven-plugin:1.6.8:rc-list -P release)
          echo $rcList
          stagingRepositoryId=$(echo $rcList | grep -o "\[INFO\] orgliquibase-[0-9]*[ ]*OPEN" | grep -o "orgliquibase-[0-9]*")
          echo "Staging Repository Id: $stagingRepositoryId"
          if [ "$(echo $stagingRepositoryId | grep -o "\-" | wc -l)" != "1" ]; then
            echo "Did not find exactly one open repository"
            exit 1
          fi

      - name: Verify with Maven
        if: ${{ github.ref != 'refs/heads/master' }}
        run: mvn --batch-mode verify

#      - name: Release snapshot with Maven
#        if: ${{ github.ref == 'refs/heads/master' }}
#        run: |
#          export GPG_TTY=$(tty)
#          export DISPLAY=:0
#          gpg --version
#          gpg --list-secret-keys --keyid-format LONG
#          echo "test" | gpg --batch --clearsign --pinentry-mode loopback || true
#
#          echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>"
#          mvn --batch-mode deploy -Ddockerfile.push
#        env:
#          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.SONATYPE_PASSPHRASE }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#