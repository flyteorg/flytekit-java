<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2021 Flyte Authors.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!-- This is a checkstyle configuration file. For descriptions of
what the following rules do, please see the checkstyle configuration
page at http://checkstyle.sf.net/config.html -->

<module name="Checker">
  <property name="severity" value="error"/>

  <module name="BeforeExecutionExclusionFileFilter">
    <property name="fileNamePattern" value=".*/generated-sources/.*"/>
  </module>

  <!-- Allow turning checks off in the code using @SuppressWarnings annotation -->
  <!-- See http://checkstyle.sf.net/config_filters.html#SuppressWarningsFilter -->
  <module name="SuppressWarningsFilter"/>

  <!-- Check that every module has a package-info.java -->
  <module name="JavadocPackage"/>

  <module name="SuppressionFilter">
    <property name="file" value="${checkstyle.suppressions.file}" default="suppressions.xml" />
  </module>

  <module name="LineLength">
    <property name="max" value="120"/>
    <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
  </module>

  <!-- All Java AST specific tests live under TreeWalker module. -->
  <module name="TreeWalker">
    <!-- Required to work in pair with SuppressWarningsFilter-->
    <module name="SuppressWarningsHolder" />

    <module name="MissingDeprecated" />

    <module name="AvoidStarImport" />

    <module name="IllegalImport">
      <property name="illegalPkgs" value="autovalue.shaded"/>
    </module>

    <module name="RedundantModifier">
      <property name="tokens" value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF, INTERFACE_DEF, CLASS_DEF, ENUM_DEF"/>
    </module>

    <module name="PackageDeclaration" />

    <module name="NeedBraces">
      <property name="severity" value="error"/>
      <property name="tokens" value="LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO"/>
    </module>

    <!-- Checks that long constants are defined with an upper ell.-->
    <module name="UpperEll" />

    <module name="SimplifyBooleanExpression" />

    <!-- Checks for Javadoc comments. -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <module name="JavadocMethod">
      <property name="scope" value="public"/>
      <property name="allowMissingParamTags" value="true"/>
      <property name="allowMissingReturnTag" value="true"/>
      <property name="allowedAnnotations" value="Override, Test"/>
      <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF"/>
    </module>

    <module name="JavadocParagraph"/>

    <module name="JavadocType">
      <property name="scope" value="protected"/>
      <property name="allowMissingParamTags" value="true"/>
    </module>

    <module name="JavadocStyle">
      <property name="checkHtml" value="true"/>
    </module>

    <!-- Checks for naming. -->
    <module name="MethodName">
      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9_]*)?_?$"/>
    </module>

    <module name="ParameterName">
      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9_]*)?_?$"/>
    </module>

    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]{1,})*$"/>
    </module>

    <module name="TypeName" />
    <module name="LocalFinalVariableName" />
    <module name="LocalVariableName">
      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9_]*)?_?$"/>
    </module>

    <!-- Type parameters must be either one of the four blessed letters
    T, K, V, W, X or else be capital-case terminated with a T,
    such as MyGenericParameterT -->
    <module name="ClassTypeParameterName">
      <property name="format" value="^(((T|K|V|W|X)[0-9]*)|([A-Z][a-z][a-zA-Z]*T))$"/>
    </module>

    <module name="MethodTypeParameterName">
      <property name="format" value="^(((T|K|V|W|X)[0-9]*)|([A-Z][a-z][a-zA-Z]*T))$"/>
    </module>

    <module name="InterfaceTypeParameterName">
      <property name="format" value="^(((T|K|V|W|X)[0-9]*)|([A-Z][a-z][a-zA-Z]*T))$"/>
    </module>
  </module>
</module>
